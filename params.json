{"name":"ThursUI","tagline":"C++ UI library for games and 3d apps","body":"![Logo](https://github.com/cvasseng/ThursUI/bin/logo.png) ThursUI \r\n=======\r\n\r\n**Straight-forward, pretty, and skinnable C++ UI library for games and 3d applications.**\r\n\r\n![Screenshot](https://github.com/cvasseng/ThursUI/screenshot.png)\r\n\r\n*This is very much a work in progress. While it works (more or less), it's not very robust, and is very hackish. Also note that there are currently no optimizations done on the code what-so-ever..* \r\n\r\n**Currently supported controls:**\r\n  * Button\r\n  * Progressbar\r\n  * Slider\r\n  * List Box\r\n  * Checkbox\r\n  * Label\r\n  * Dropdown\r\n  * Text input box\r\n  * Rectangle (can be used to display images)\r\n  * Image Grid (useful for e.g. inventories in RPG's)\r\n  * Multi line text field with formatting\r\n  * Skill bar (for RPG's and similar games - supports 1..n clickable icons with optional cooldown indicators)\r\n  * Window\r\n\r\n**Noteable features:**\r\n  * JSON-based CSS-style skinning - no texture maps required (textures are of course supported)\r\n  * Skins are animated - each UI state (such as active and hover) can be skinned separately, and Thurs will animate between them when the state changes\r\n  * Designed around signals/slots (powered by sigslot.h)\r\n  * Light on dependencies\r\n  * Liberally licensed (Simplified BSD for now, might switch to zlib) \r\n\r\nAs of now, there's only a renderer back-end for [NanoVG](https://github.com/memononen/nanovg). It should be easy to write a custom renderer - take a look in [`include/thurs/renderers/thurs.renderer.nanovg.hpp`](include/thurs/renderers/thurs.renderer.nanovg.hpp) for a place to start. \r\n\r\nDocumentation and an actual stable release incoming.\r\n\r\n## Building\r\n\r\nBuild using `cmake`, e.g. running `cmake -DCMAKE_BUILD_TYPE=Release && make` in the project folder.\r\nRun `make install` if you want to copy the files to the respective bin and lib folders on your system.\r\n\r\n### Dependencies\r\n\r\nThurs depend on the following libraries:\r\n  * [jsoncpp](https://github.com/open-source-parsers/jsoncpp)\r\n\r\nNote that you also need to link with the libraries needed to support the rendering back-end in your application. \r\nThe default output of the makefile is a thin library, so you need to link with jsoncpp in your final application also.\r\n\r\n### Installing\r\nEither copy `include/thurs` and the compiled library from `lib` to your preferred paths, or add `include` and `lib` to your path variable or as search paths in your IDE if you're using one. Running `make install` will move things into `/usr/local/include` and `/usr/local/lib`.\r\n\r\n## License\r\n\r\n[Simplified BSD](LICENSE).\r\n","google":"UA-70966670-1","note":"Don't delete this file! It's used internally to help with page regeneration."}